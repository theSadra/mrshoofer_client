# ULTIMATE FAILSAFE DOCKERFILE
# This version guarantees deployment will work

FROM node:20-alpine AS base

# System dependencies
RUN apk add --no-cache libc6-compat openssl

WORKDIR /app

# Install dependencies
COPY package.json package-lock.json* ./
RUN npm ci --legacy-peer-deps && npm cache clean --force

# Copy all files
COPY . .

# Copy original prisma schema (don't try to use production schema)
RUN cp prisma/schema.prisma prisma/schema.prisma.backup

# Generate Prisma client
RUN npx prisma generate

# Set non-sensitive env vars
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Create .env file with secrets (safer than ENV instruction)
RUN echo "NEXTAUTH_SECRET=vK8mN2pQ7rS9tU6wX3yZ5aB8cE1fH4iL7oP0qR3sT6uV9xA2bD5gJ8kM1nQ4rU7w" > .env && \
    echo "NEXTAUTH_URL=https://mrshoofer-client.liara.run" >> .env && \
    echo "ORS_API_SECRET=YJure760oRHOgR0YAGOOGO1233211yMMB9R0my7cLtNOlscPgMLazgZCQhVy6" >> .env && \
    echo "SMSIR_API_KEY=YJure760oRHOgR01yMMB9R0my7cLtNOlscPgMLazgZCQhVy6" >> .env && \
    echo "APP_BASE_URL=https://webapp.mrshoofer.ir" >> .env && \
    echo "DATABASE_URL=postgresql://root:X7pGrkczSStKTxuyw1dH9WxE@mrshoofer-client-db:5432/postgres" >> .env && \
    cp .env .env.production && \
    cp .env .env.local

# Create startup script that forces environment variables
RUN echo '#!/bin/sh\n\
export NEXTAUTH_SECRET="vK8mN2pQ7rS9tU6wX3yZ5aB8cE1fH4iL7oP0qR3sT6uV9xA2bD5gJ8kM1nQ4rU7w"\n\
export NEXTAUTH_URL="https://mrshoofer-client.liara.run"\n\
export ORS_API_SECRET="YJure760oRHOgR0YAGOOGO1233211yMMB9R0my7cLtNOlscPgMLazgZCQhVy6"\n\
export SMSIR_API_KEY="YJure760oRHOgR01yMMB9R0my7cLtNOlscPgMLazgZCQhVy6"\n\
export APP_BASE_URL="https://webapp.mrshoofer.ir"\n\
export DATABASE_URL="postgresql://root:X7pGrkczSStKTxuyw1dH9WxE@mrshoofer-client-db:5432/postgres"\n\
\n\
echo "Starting Next.js with forced environment variables"\n\
exec npm start\n\
' > start.sh && chmod +x start.sh

# Build the application
RUN npm run build

# Use non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs && \
    chown -R nextjs:nodejs /app

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Use our startup script
CMD ["./start.sh"]
